#====================  /etc/nginx/conf.d/chatapp.conf  ===========#
# upstream：指向本机 127.0.0.1:8000 的 Gunicorn / Uvicorn / Flask-SocketIO
upstream backend {
    server 127.0.0.1:8000;
}

# HTTP服务器，将请求重定向到HTTPS
server {
    listen 80;
    server_name wither2rebirth.com;
    return 301 https://$host$request_uri;
}


# HTTPS服务器
server {
    listen 443 ssl http2;
    server_name wither2rebirth.com;     # 若无域名，用 _ 占位，或写实际域名

    # SSL证书配置
    ssl_certificate     /etc/letsencrypt/live/wither2rebirth.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/wither2rebirth.com/privkey.pem;


    # OCSP Stapling
    # ssl_stapling on;
    # ssl_stapling_verify on;
    
    # 添加安全头部
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy strict-origin-when-cross-origin;

    # 全局超时设置
    client_body_timeout 15;
    client_header_timeout 15;
    keepalive_timeout 15;
    send_timeout 15;

    # ---- 静态资源 ----
    location /static/ {
        alias /var/www/chat/app/static/;     # ← 确保路径正确
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
    }

    # ---- Socket.IO / WebSocket ----
    location /socket.io/ {
        proxy_pass http://backend;  # 使用upstream
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_buffering off;
    }

    # ---- API请求专门处理 ----
    location /api/ {
        proxy_pass http://backend;  # 使用upstream
        proxy_http_version 1.0;  # 使用HTTP/1.0避免长连接问题
        proxy_set_header Connection "";  # 关闭keep-alive
        
        # 基本头
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # API请求超时设置
        proxy_read_timeout 60s;
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        
        # 支持较大的请求体
        client_max_body_size 10M;
    }

    # ---- 普通HTTP请求处理 ----
    location / {
        proxy_pass http://backend;  # 使用upstream
        
        # 基本头
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # 禁用WebSocket升级，仅用于普通HTTP
        proxy_set_header Connection "";
        proxy_http_version 1.0;
        
        # Cookie处理 - 添加Secure标志
        proxy_cookie_path / "/; HttpOnly; Secure; SameSite=Lax";
        
        # 重定向处理
        proxy_redirect default;
        
        # 超时设置
        proxy_read_timeout 60s;
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
    }
}
#===============================================================#
